[tool.poetry]
name = "msaBase"
version = "0.0.123"
description = "General Package for Microservices based on FastAPI like Profiler, Scheduler, Sysinfo, Healtcheck, Error Handling etc."
authors = ["Stefan Welcker"]
readme = "README.md"
packages = [{include = "msaBase"}]


[tool.black]
line-length = 119


[tool.isort]
profile = "black"
line_length = 119
src_paths = ["isort", "test"]
skip = ["venv/", "dit/"]

[tool.flake8]
ignore = ['E266','W503','E203','E722']
exclude ="""
    __pycache__,
    venv,
    .env,
    docs,
    tests,
    dist_docs,
    dit,
    """
per-file-ignores = [
    '__init__.py:F401',
]
max-line-length = 119
count = true


[tool.poetry.dependencies]
python = ">=3.9.0,<3.11"
msaFileSystem = "0.0.8"
msaDocModels = "0.0.112"
anyio = "3.7.1"
fastapi = {extras = ["all"], version = "0.86.0"}
fastapi_utils = "0.2.1"
pydantic = {extras = ["email" ,"dotenv"], version = "1.9.2"}
pyinstrument = "4.4.0"
autoflake = "2.0.1"
black = "22.6.0"
pyproject-flake8 = "6.0.0"
flake8 = "6.0.0"
colorama = "0.4.6"
isort = "5.12.0"
sentry-sdk = "1.24.0"
loguru = "0.6.0"
lxml = "4.9.2"
mypy = "1.0.0"
setuptools = "67.6.1"
prometheus_fastapi_instrumentator = "5.9.1"
Jinja2 = "3.1.2"
orjson = "3.8.3"
msgpack-asgi = "1.1.0"
slowapi = "0.1.7"
addict = "2.4.0"
pymongo = "4.3.3"
aiofiles = "23.1.0"
fs = "2.4.16"
starlette = "0.20.4"
starlette-context = "0.3.5"
starception = "0.4.1"
Starlette-WTF = "0.4.3"
httpx = "0.23.3"
aiohttp = "3.8.4"
hjson = "3.1.0"
uvicorn = "0.18.3"
uvloop = "0.17.0"
gputil = "1.4.0"
psutil = "5.9.4"
apscheduler = "3.10.0"
pytest = "7.2.0"
pytest-asyncio = "0.20.2"
pytest-mock = "3.10.0"
confluent-kafka = "^2.3.0"

[tool.poetry.group.docs.dependencies]
fonttools = "~4.37.3"
mkdocs = "~1.3.1"
mkdocstrings = "~0.23.0"
mkdocstrings-python = "~1.7.0"
mkdocs-material = "~8.4.4"
mkdocs-gen-files = "~0.4.0"
mkdocs-literate-nav = "~0.4.1"
mkdocs-section-index = "~0.3.4"
mkdocs-page-pdf = "~0.1.0"
mkdocs-git-revision-date-localized-plugin = "~1.1.0"
Pygments = "~2.13.0"
Markdown = "~3.3.7"
mdx-include = "~1.4.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"